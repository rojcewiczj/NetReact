[{"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\index.tsx":"1","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\index.tsx":"3","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\reportWebVitals.ts":"4","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"5","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\models\\activity.ts":"6","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\nav\\NavBar.tsx":"7","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"8","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\nav\\NavBar.tsx":"9","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"10","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"11","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"12","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"13","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"14","C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\form\\ActivityForm.tsx":"15","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"16","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\form\\ActivityForm.tsx":"17","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\models\\activity.ts":"18"},{"size":523,"mtime":1610769655707,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1610409489291,"results":"21","hashOfConfig":"20"},{"size":523,"mtime":1610769655707,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1610409489291,"results":"24","hashOfConfig":"23"},{"size":1478,"mtime":1611097018838,"results":"25","hashOfConfig":"20"},{"size":173,"mtime":1610770225811,"results":"26","hashOfConfig":"20"},{"size":681,"mtime":1611096533814,"results":"27","hashOfConfig":"20"},{"size":1902,"mtime":1611119079021,"results":"28","hashOfConfig":"23"},{"size":681,"mtime":1611096533814,"results":"29","hashOfConfig":"23"},{"size":1555,"mtime":1611118426164,"results":"30","hashOfConfig":"23"},{"size":1237,"mtime":1611093975346,"results":"31","hashOfConfig":"23"},{"size":1335,"mtime":1611097182112,"results":"32","hashOfConfig":"20"},{"size":1237,"mtime":1611093975346,"results":"33","hashOfConfig":"20"},{"size":1185,"mtime":1611097173425,"results":"34","hashOfConfig":"20"},{"size":838,"mtime":1611096893706,"results":"35","hashOfConfig":"20"},{"size":1185,"mtime":1611097173425,"results":"36","hashOfConfig":"23"},{"size":2568,"mtime":1611118838012,"results":"37","hashOfConfig":"23"},{"size":175,"mtime":1611116352703,"results":"38","hashOfConfig":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"sv1jfe",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1o2gqzp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\index.tsx",[],["80","81"],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\index.tsx",[],["82","83"],"C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",["84","85","86","87","88"],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",["89","90"],"C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["91"],"import React from 'react'\r\nimport { Grid, GridColumn, List } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity'\r\nimport ActivityDetails from '../details/ActivityDetails'\r\nimport ActivityForm from '../form/ActivityForm'\r\nimport ActivityList from './ActivityList'\r\ninterface IProps {\r\n    activities: IActivity[];\r\n    selectActivity : (id:string) => void;\r\n    selectedActivity : IActivity;\r\n    editMode: boolean;\r\n    setEditMode: (editMode: boolean) => void;\r\n    setSelectedActivity: (activity: IActivity | null) => void;\r\n    createActivity:(activity: IActivity) => void;\r\n    editActivity: (activity: IActivity) => void;\r\n  }\r\n\r\nconst ActivityDashboard: React.FC<IProps> = ({activities, selectActivity, selectedActivity, editMode, setEditMode, setSelectedActivity, createActivity, editActivity}) => {\r\n    return(\r\n        <Grid>\r\n            <GridColumn width={10}>\r\n                <ActivityList activities={activities} selectActivity ={selectActivity} />\r\n            </GridColumn>\r\n            <GridColumn width={6}>\r\n                {selectedActivity && !editMode &&\r\n                <ActivityDetails selectedActivity={selectedActivity} setEditMode={setEditMode} setSelectedActivity={setSelectedActivity}/>\r\n                }\r\n                {editMode && \r\n                <ActivityForm setEditMode={setEditMode} activity={selectedActivity!} createActivity={createActivity} editActivity={editActivity}/>\r\n                }\r\n            </GridColumn>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ActivityDashboard","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["92"],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["93"],"C:\\Users\\rojce\\Documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["94"],"import React from 'react'\r\nimport { Button, ButtonGroup, Card, Icon, Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\n\r\ninterface IProps {\r\n    selectedActivity: IActivity\r\n    setEditMode: (editMode: boolean) => void;\r\n    setSelectedActivity: (activity: IActivity | null) => void;\r\n}\r\n\r\nconst ActivityDetails: React.FC<IProps> = ({selectedActivity, setEditMode, setSelectedActivity}) => {\r\n    return(\r\n  <Card fluid>\r\n    <Image src={`/assets/${selectedActivity.category}.jpg`} wrapped ui={false} />\r\n    <Card.Content>\r\n      <Card.Header>{selectedActivity.title}</Card.Header>\r\n      <Card.Meta>\r\n        <span className='date'>{selectedActivity.date}</span>\r\n      </Card.Meta>\r\n      <Card.Description>\r\n        {selectedActivity.description}\r\n      </Card.Description>\r\n    </Card.Content>\r\n    <Card.Content extra>\r\n      <ButtonGroup widths={2}>\r\n          <Button onClick={()=> setEditMode(true)} basic color=\"blue\" content=\"Edit\" />\r\n          <Button onClick={()=> setSelectedActivity(null)} basic color=\"grey\" content=\"Cancel\" />\r\n      </ButtonGroup>\r\n    </Card.Content>\r\n  </Card>\r\n  );\r\n}\r\nexport default ActivityDetails;\r\n","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\features\\activities\\form\\ActivityForm.tsx",["95"],"import React, {ChangeEvent, FormEvent, useState} from 'react'\r\nimport { Segment, Form, FormInput, FormTextArea, Button } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid';\r\ninterface IProps {\r\n    setEditMode: (editMode: boolean) => void;\r\n    activity: IActivity\r\n    createActivity:(activity: IActivity) => void;\r\n    editActivity: (activity: IActivity) => void;\r\n}\r\nconst ActivityForm: React.FC<IProps> = ({setEditMode, activity: initialFormState, createActivity, editActivity}) => {\r\n    const initializeForm = () => {\r\n        if(initialFormState) {\r\n            return initialFormState;\r\n        \r\n         } else{\r\n            return{\r\n                id: '',\r\n                title:\"\",\r\n                category:\"\",\r\n                description:\"\",\r\n                date:\"\",\r\n                city:\"\",\r\n                venue:\"\"\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const[activity, setActivity] = useState<IActivity>(initializeForm);\r\n    \r\n    const handleSubmit = () => {\r\n        console.log(activity);\r\n        if(activity.id.length === 0){\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            }\r\n            createActivity(newActivity)\r\n        }else{\r\n            editActivity(activity)\r\n        }\r\n    }\r\n    const handleInputChange = (event: FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const {name, value} = event.currentTarget\r\n        setActivity({...activity, [name]: value})\r\n    }\r\n    return(\r\n  <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n          <FormInput onChange={handleInputChange} name=\"title\" placeholder='Title' value={activity.title}/>\r\n          <FormTextArea onChange={handleInputChange} name=\"description\" rows={2} placeholder='Description'value={activity.description}/>\r\n          <FormInput onChange={handleInputChange} name=\"category\" placeholder='Category' value={activity.category}/>\r\n          <FormInput onChange={handleInputChange} name=\"date\" type='date' placeholder='Date' value={activity.date}/>\r\n          <FormInput onChange={handleInputChange} name=\"city\" placeholder='City'value={activity.city}/>\r\n          <FormInput onChange={handleInputChange} name=\"venue\" placeholder='Venue' value={activity.venue}/>\r\n          <Button floated='right' positive type='submit' content='Submit' />\r\n          <Button onClick={() => setEditMode(false)} floated='right' type='button' content='Cancel' />\r\n\r\n      </Form>\r\n  </Segment>\r\n  );\r\n}\r\nexport default ActivityForm;\r\n","C:\\Users\\rojce\\documents\\GitHub\\NetReact\\Reactivities\\my-app\\src\\app\\models\\activity.ts",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":9,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"102","severity":1,"message":"106","line":3,"column":17,"nodeType":"104","messageId":"105","endLine":3,"endColumn":21},{"ruleId":"102","severity":1,"message":"107","line":3,"column":23,"nodeType":"104","messageId":"105","endLine":3,"endColumn":27},{"ruleId":"102","severity":1,"message":"108","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":19},{"ruleId":"102","severity":1,"message":"109","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":32},{"ruleId":"102","severity":1,"message":"108","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":19},{"ruleId":"102","severity":1,"message":"109","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":32},{"ruleId":"102","severity":1,"message":"107","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":32},{"ruleId":"102","severity":1,"message":"107","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":32},{"ruleId":"102","severity":1,"message":"106","line":2,"column":37,"nodeType":"104","messageId":"105","endLine":2,"endColumn":41},{"ruleId":"102","severity":1,"message":"106","line":2,"column":37,"nodeType":"104","messageId":"105","endLine":2,"endColumn":41},{"ruleId":"102","severity":1,"message":"110","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":27},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'List' is defined but never used.","'timeStamp' is defined but never used.","'ImportsNotUsedAsValues' is defined but never used.","'ChangeEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]